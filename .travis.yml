language: android
jdk: oraclejdk8

env:
    global:
    - ADB_INSTALL_TIMEOUT=8
    - EMULATOR_ANDROID_VERSION=24
    - ANDROID_EMULATOR=test
    - ANDROID_TARGET=android-24
    - NDK_VERSION=r16b
    - MAZE_WAIT_TIME=18

before_install:
- mkdir "$ANDROID_HOME/licenses" || true
- echo -e "8933bad161af4178b1185d1a37fbf41ea5269c55\nd56f5187479451eabf01fb78af6dfcb131a6481e" > "$ANDROID_HOME/licenses/android-sdk-license"
- echo -e "84831b9409646a918e30573bab4c9c91346d8abd\n504667f4c0de7af1a06de9f4b1727b84351f2910" > "$ANDROID_HOME/licenses/android-sdk-preview-license"
- yes | sdkmanager "platforms;android-28"
- bundle install >/dev/null
- ./scripts/install-ndk.sh
- env

install:
- $ANDROID_HOME/tools/bin/sdkmanager --channel=0 "tools" "platform-tools" "build-tools;28.0.1" "platforms;android-28"

android:
    components:
    - tools

before_script:
- $ANDROID_HOME/tools/bin/sdkmanager --channel=0 "platforms;android-$EMULATOR_ANDROID_VERSION" "system-images;android-$EMULATOR_ANDROID_VERSION;default;armeabi-v7a"
- echo no | $ANDROID_HOME/tools/bin/avdmanager create avd -f -n test -k "system-images;android-$EMULATOR_ANDROID_VERSION;default;armeabi-v7a"
- echo 'disk.dataPartition.size=512M' >> ~/.android/avd/test.avd/config.ini
- $ANDROID_HOME/emulator/emulator -avd test -no-audio -no-window -verbose -show-kernel &
- android-wait-for-emulator
- adb shell input keyevent 82 &

script:
- bundle exec bugsnag-maze-runner --format progress --color --verbose features/native*.feature

jobs:
  include:
  # Run static analysis and confirm the project builds before running expensive unit/E2E tests
  - stage: lint
    install:
    - sudo apt-get install -y cppcheck
    before_script: skip
    script:
    # Remove unsupported ABI
    - sed --in-place="" --expression="s/'armeabi',//" ndk/build.gradle examples/sdk-app-example/build.gradle
    - ./gradlew lint checkstyle detekt
    - cppcheck --enable=warning,performance ndk/src/main/jni -i ndk/src/main/jni/deps -i ndk/src/main/jni/external --error-exitcode=1
  # Run SDK unit tests against API 16:
  - stage: unit tests
    script: ./gradlew sdk:createDebugCoverageReport coveralls
    env:
    - ANDROID_TARGET=android-16

  # Run NDK and SDK unit tests against different NDK revisions:
  - stage: unit tests
    script: ./gradlew createDebugCoverageReport coveralls || (adb logcat -v brief -d '*:S BugsnagNDKTest' && false)
    env: NDK_VERSION=r12b
  - stage: unit tests
    script: ./gradlew createDebugCoverageReport coveralls || (adb logcat -v brief -d '*:S BugsnagNDKTest' && false)
    env: NDK_VERSION=r16b
  - stage: unit tests
    script:
    # Remove unsupported ABI
    - sed --in-place="" --expression="s/'armeabi',//" ndk/build.gradle examples/sdk-app-example/build.gradle
    - ./gradlew createDebugCoverageReport coveralls || (adb logcat -v brief -d '*:S BugsnagNDKTest' && false)
    env: NDK_VERSION=r19

  # Run mazerunner scenarios
  - stage: end-to-end tests

  # Deploy javadoc to GH pages
  - stage: deploy
    script: skip
    before_deploy: ./gradlew javadoc
    deploy:
      provider: pages
      local_dir: sdk/docs # only include the contents of the docs dir
      skip_cleanup: true
      github_token: $GITHUB_TOKEN # Set in travis-ci.com dashboard

before_cache:
  - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
  - rm -fr $HOME/.gradle/caches/*/plugin-resolution/

cache:
  directories:
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/
    - $HOME/.android/build-cache

stages:
- lint
- unit tests
- end-to-end tests
- name: deploy
  if: tag IS present
