allprojects {
    repositories {
        mavenLocal()
        google()

        // ignore already published artefacts in favour of mavenLocal artefact
        mavenCentral() {
            content {
                excludeModule("com.bugsnag", "bugsnag-android")
            }
        }
    }
}

buildscript {
    repositories {
        google()
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    ext.kotlin_version = "1.4.32"

    dependencies {
        if (project.hasProperty("USE_LEGACY_AGP") && "true" == project.property("USE_LEGACY_AGP")) {
            project.logger.lifecycle("Using AGP 4.2.0")
            classpath "com.android.tools.build:gradle:4.2.0"
            classpath "com.bugsnag:bugsnag-android-gradle-plugin:5.8.2"
        }
        else {
            project.logger.lifecycle("Using AGP 7.1.0")
            classpath "com.android.tools.build:gradle:7.1.0"
            classpath "com.bugsnag:bugsnag-android-gradle-plugin:7.1.0"
        }
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "io.gitlab.arturbosch.detekt:detekt-gradle-plugin:1.18.1"
        classpath "org.jlleitschuh.gradle:ktlint-gradle:10.2.0"
    }
}

if (project.hasProperty("TEST_FIXTURE_NDK_VERSION")) {
    def version = project.property("TEST_FIXTURE_NDK_VERSION")
    project.logger.lifecycle("Building test fixture with custom NDK version '$version'")
    ext.ndkVersion = version
} else {
    project.logger.lifecycle("Building test fixture with default NDK version")
    ext.ndkVersion = "17.2.4988734"
}
