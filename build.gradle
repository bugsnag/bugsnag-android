import com.android.build.gradle.LibraryPlugin

buildscript {
    repositories {
        mavenLocal()
        google()
        mavenCentral()
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    ext.kotlin_version = "1.3.72"
    ext.agpVersion = "4.1.1"

    dependencies {
        classpath "com.android.tools.build:gradle:${agpVersion}"
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.5"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "io.gitlab.arturbosch.detekt:detekt-gradle-plugin:1.14.1"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:0.10.1"
        classpath "org.jlleitschuh.gradle:ktlint-gradle:9.4.1"
    }
}
plugins {
    id "com.github.hierynomus.license" version "0.15.0"
}

allprojects {
    repositories {
        google()
        mavenCentral()
        jcenter()
    }

    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:all" << "-Werror"
        }

        tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
            kotlinOptions {
                allWarningsAsErrors = true
            }
        }
    }
}

subprojects { proj ->
    afterEvaluate {
        configureAndroidProject(proj)
    }
}

private void configureAndroidProject(Project proj) {
    def lintOptions = proj.android.lintOptions
    lintOptions.abortOnError = true
    lintOptions.warningsAsErrors = true
    lintOptions.checkAllWarnings = true
    lintOptions.baseline new File(proj.projectDir, "lint-baseline.xml")
    lintOptions.disable "GradleDependency", "NewerVersionAvailable"

    def defaultConfig = proj.android.defaultConfig
    defaultConfig.testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
    defaultConfig.consumerProguardFiles = ["proguard-rules.pro"]

    proj.android.testOptions.unitTests.all {
        testLogging {
            events "passed", "skipped", "failed", "standardOut", "standardError"
            outputs.upToDateWhen {false}
            showStandardStreams = true
            info.events = ["passed", "skipped", "failed", "standardOut", "standardError"]
        }
    }
    proj.android {
        testOptions {
            unitTests.returnDefaultValues = true
        }
    }
}

ext {
    // Note minSdkVersion must be >=21 for 64 bit architectures
    compileSdkVersion = 28
    minSdkVersion = 14
    ndkVersion = "16.1.4479499"

    supportLibVersion = "1.1.0"
    supportTestVersion = "1.2.0"
    espressoVersion = "3.1.0"
    junitVersion = "4.12"
    mockitoVersion = "2.28.2"

}
